<?xml version="1.0" encoding="UTF-8"?>
<html xml:lang="en-us" lang="en-us" xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:ns="http://www.w3.org/2001/10/synthesis">
<head>
<title>The Linux Programming Interface</title>
<link rel="stylesheet" type="text/css" href="../styles/9781593272203.css"/>
</head>
<body>
<h2 class="h2" id="app05"><span epub:type="pagebreak" id="page_1419"/><strong><span class="big">E</span></strong><br/><strong>FURTHER SOURCES OF INFORMATION</strong></h2>
<p class="noindenta">Aside from the material in this book, many other sources of information about Linux system programming are available. This appendix provides a short introduction to some of them.</p>
<h3 class="h3a" id="app05lev1sec01"><strong>Manual pages</strong></h3>
<p class="noindenta">Manual pages are accessible via the <em>man</em> command. (The command <em>man man</em> describes how to use <em>man</em> to read manual pages.) The manual pages are divided into numbered sections that categorize information as follows:</p>
<ol>
<li class="order"><p class="orderp"><em>Programs and shell commands</em>: commands executed by users at the shell prompt.</p></li>
<li class="order"><p class="orderp"><em>System calls</em>: Linux system calls.</p></li>
<li class="order"><p class="orderp"><em>Library functions</em>: standard C library functions (as well as many other library functions).</p></li>
<li class="order"><p class="orderp"><em>Special files</em>: special files, such as device files.</p></li>
<li class="order"><p class="orderp"><em>File formats</em>: formats of files such as the system password (<span class="literal">/etc/passwd</span>) and group (<span class="literal">/etc/group</span>) files.</p></li>
<li class="order"><p class="orderp"><em>Games</em>: games.</p></li>
<li class="order"><p class="orderp"><span epub:type="pagebreak" id="page_1420"/><em>Overview, conventions, protocols, and miscellany</em>: overviews of various topics, and various pages on network protocols and sockets programming.</p></li>
<li class="order"><p class="orderp"><em>System administration commands</em>: commands that are for use mainly by the superuser.</p></li>
</ol>
<p class="noindent">In some cases, there are manual pages in different sections with the same name. For example, there is a section 1 manual page for the <em>chmod</em> command and a section 2 manual page for the <em>chmod()</em> system call. To distinguish manual pages with the same name, we enclose the section number in parentheses after the name&#8212;for example, <em>chmod(1)</em> and <em>chmod(2)</em>. To display the manual page from a particular section, we can insert the section number into the <em>man</em> command:</p>
<p class="programs">$ <span class="codestrong">man 2 chmod</span></p>
<p class="noindentb">The manual pages for system calls and library functions are divided into a number of parts, which usually include the following:</p>
<p class="bull">&#8226; <em>Name</em>: the name of the function, accompanied by a one-line description. The following command can be used to obtain a list of all manual pages whose one-line description contains the specified string:</p>
<p class="programsbl">$ <span class="codestrong">man -k <span class="codeitalic">string</span></span></p>
<p class="bullp">This is useful if we can&#8217;t remember or don&#8217;t know exactly which manual page we&#8217;re looking for.</p>
<p class="bull">&#8226; <em>Synopsis</em>: the C prototype of the function. This identifies the type and order of the function&#8217;s arguments, as well as the type of value returned by the function. In most cases, a list of header files precedes the function prototype. These header files define macros and C types needed for use with this function, as well as the function prototype itself, and should be included in a program using this function.</p>
<p class="bull">&#8226; <em>Description</em>: a description of what the function does.</p>
<p class="bull">&#8226; <em>Return value</em>: a description of the range of values returned by the function, including how the function informs the caller of an error.</p>
<p class="bull">&#8226; <em>Errors</em>: a list of the possible <em>errno</em> values that are returned in the event of an error.</p>
<p class="bull">&#8226; <em>Conforming to</em>: a description of the various UNIX standards to which the function conforms. This gives us an idea of how portable this function is to other UNIX implementations and also identifies Linux-specific aspects of the function.</p>
<p class="bull">&#8226; <em>Bugs</em>: a description of things that are broken or that don&#8217;t work as they should.</p>
<div class="block1">
<p class="noindent">Although some of the later commercial UNIX implementations have preferred more marketable euphemisms, from early times, the UNIX manual pages called a bug a bug. Linux continues the tradition. Sometimes these &#8220;bugs&#8221; are philosophical, simply describing ways in which things could be improved, or warning about special or unexpected (but otherwise intended) behaviors.</p>
</div>
<p class="bull">&#8226; <em>Notes</em>: miscellaneous additional notes on the function.</p>
<p class="bull">&#8226; <em>See also</em>: a list of manual pages for related functions and commands.</p>
<p class="noindentt"><span epub:type="pagebreak" id="page_1421"/>The manual pages describing the kernel and <em>glibc</em> APIs are available online at <em><a href="http://www.kernel.org/doc/man-pages/">http://www.kernel.org/doc/man-pages/</a></em>.</p>
<h3 class="h3a" id="app05lev1sec02"><strong>GNU <em>info</em> documents</strong></h3>
<p class="noindenta">Rather than using the traditional manual page format, the GNU project documents much of its software using <em>info</em> documents, which are hyperlinked documents that can be browsed using the <em>info</em> command. A tutorial on the use of <em>info</em> can be obtained using the command <em>info info</em>.</p>
<p class="indent">Although in many cases the information in manual pages and corresponding <em>info</em> documents is the same, sometimes the <em>info</em> documentation for the C library contains additional information not found in the manual pages or vice versa.</p>
<div class="block">
<p class="noindent">The reasons both manual pages and <em>info</em> documents exist, even though both may contain the same information, are somewhat religious. The GNU project prefers the <em>info</em> user interface, and so provides all documentation via <em>info</em>. However, users and programmers on UNIX systems have had a long history of using (and in many cases preferring) manual pages, so there is strong momentum in favor of upholding this format. The manual pages also tend to include more historical information (e.g., information about behavior changes across versions) than do the <em>info</em> documents.</p>
</div>
<h3 class="h3a" id="app05lev1sec03"><strong>The GNU C library (<em>glibc</em>) manual</strong></h3>
<p class="noindenta">The GNU C library includes a manual that describes the use of many of the functions in the library. The manual is available at <em><a href="http://www.gnu.org/">http://www.gnu.org/</a></em>. It is also provided with most distributions in both HTML format and <em>info</em> format (via the command <em>info libc</em>).</p>
<h3 class="h3a" id="app05lev1sec04"><strong>Books</strong></h3>
<p class="noindenta">An extensive bibliography can be found at the end of this book, but a few books deserve special mention.</p>
<p class="indent">At the top of the list are the books by the late W. Richard Stevens. <em>Advanced Programming in the UNIX Environment</em> ([<a href="bib.xhtml#bib88">Stevens, 1992</a>]) provides detailed coverage of UNIX system programming, focusing on POSIX, System V, and BSD. A recent revision by Stephen Rago, [<a href="bib.xhtml#bib94">Stevens &#38; Rago, 2005</a>] updates the text for modern standards and implementations, and adds coverage of threads and a chapter on network programming. This book is a good place to look for an alternative viewpoint on many of the topics covered in this book. The two-volume <em>UNIX Network Programming</em> ([<a href="bib.xhtml#bib93">Stevens et al., 2004</a>], [<a href="bib.xhtml#bib90">Stevens, 1999</a>]) provides extremely detailed coverage of network programming and interprocess communication on UNIX systems.</p>
<div class="block">
<p class="noindent">[<a href="bib.xhtml#bib93">Stevens et al., 2004</a>] is a revision by Bill Fenner and Andrew Rudoff of [<a href="bib.xhtml#bib89">Stevens, 1998</a>], the previous edition of Volume 1 of the <em>UNIX Network Programming</em>. While the revised edition covers several new areas, in most cases where we make reference to [<a href="bib.xhtml#bib93">Stevens et al., 2004</a>], the same material can also be found in [<a href="bib.xhtml#bib89">Stevens, 1998</a>], albeit under different chapter and section numbers.</p>
</div>
<p class="noindent"><em>Advanced UNIX Programming</em> ([<a href="bib.xhtml#bib79">Rochkind, 1985</a>]) was a good, brief, and sometimes humorous, introduction to UNIX (System V) programming. It is nowadays available in an updated and extended second edition ([<a href="bib.xhtml#bib80">Rochkind, 2004</a>]).</p>
<p class="indent"><span epub:type="pagebreak" id="page_1422"/>The POSIX threading API is thoroughly described in <em>Programming with POSIX Threads</em> ([<a href="bib.xhtml#bib10"><em>Butenhof</em>, 1996</a>]).</p>
<p class="indent"><em>Linux and the Unix Philosophy</em> ([<a href="bib.xhtml#bib30">Gancarz, 2003</a>]) is a brief introduction to the philosophy of application design on Linux and UNIX systems.</p>
<p class="indent">Various books provide an introduction to reading and modifying the Linux kernel sources, including <em>Linux Kernel Development</em> ([<a href="bib.xhtml#bib59">Love, 2010</a>]) and <em>Understanding the Linux Kernel</em> ([<a href="bib.xhtml#bib09">Bovet &#38; Cesati, 2005</a>]).</p>
<p class="indent">For more general background on UNIX kernels, <em>The Design of the UNIX Operating System</em> ([<a href="bib.xhtml#bib04">Bach, 1986</a>]) remains very readable and contains material relevant to Linux. <em>UNIX Internals: The New Frontiers</em> ([<a href="bib.xhtml#bib104">Vahalia, 1996</a>]) surveys kernel internals for more modern UNIX implementations.</p>
<p class="indent">For writing Linux device drivers, the essential reference is <em>Linux Device Drivers</em> ([<a href="bib.xhtml#bib16">Corbet et al., 2005</a>]).</p>
<p class="indent"><em>Operating Systems: Design and Implementation</em> ([<a href="bib.xhtml#bib101">Tanenbaum &#38; Woodhull, 2006</a>]) describes operating system implementation using the example of Minix. (See also <em><a href="http://www.minix3.org/">http://www.minix3.org/</a></em>.)</p>
<h3 class="h3a" id="app05lev1sec05"><strong>Source code of existing applications</strong></h3>
<p class="noindenta">Looking at the source code of existing applications can often provide good examples of how to use particular system calls and library functions. On Linux distributions employing the RPM Package Manager, we can find the package that contains a particular program (such as <em>ls</em>) as follows:</p>
<p class="programs">$ <span class="codestrong">which ls</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="font1">Find pathname of ls program</span><br/>/bin/ls<br/>$ <span class="codestrong">rpm -qf /bin/ls</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="font1">Find out which package created the pathname</span> /bin/ls<br/>coreutils-5.0.75</p>
<p class="noindent">The corresponding source code package will have a name similar to the above, but with the suffix <span class="literal">.src.rpm</span>. This package will be on the installation media for the distribution or be available for download from the distributor&#8217;s web site. Once we obtain the package, we can install it using the <em>rpm</em> command, and then examine the source code, which is typically placed in some directory under <span class="literal">/usr/src</span>.</p>
<p class="indent">On systems using the Debian package manager, the process is similar. We can determine the package that created a pathname (for the <em>ls</em> program, in this example) using the following command:</p>
<p class="programs">$ <span class="codestrong">dpkg -S /bin/ls</span><br/>coreutils: /bin/ls</p>
<h3 class="h3a" id="app05lev1sec06"><strong>The Linux Documentation Project</strong></h3>
<p class="noindenta">The Linux Documentation Project (<em><a href="http://www.tldp.org/">http://www.tldp.org/</a></em>) produces freely available documentation on Linux, including HOWTO guides and FAQs (frequently asked questions and answers) on various system administration and programming topics. The site also offers more extensive electronic books on a range of topics.</p>
<h3 class="h3a" id="app05lev1sec07"><strong>The GNU project</strong></h3>
<p class="noindenta">The GNU project (<em><a href="http://www.gnu.org/">http://www.gnu.org/</a></em>) provides an enormous quantity of software source code and associated documentation.</p>
<h3 class="h3a" id="app05lev1sec08"><span epub:type="pagebreak" id="page_1423"/><strong>Newsgroups</strong></h3>
<p class="noindentab">Usenet newsgroups can often be a good source of answers to specific programming questions. The following newsgroups are of particular interest:</p>
<p class="bull">&#8226; <em>comp.unix.programmer</em> addresses general UNIX programming questions.</p>
<p class="bull">&#8226; <em>comp.os.linux.development.apps</em> addresses questions relating to application development specifically on Linux.</p>
<p class="bull">&#8226; <em>comp.os.linux.development.system</em>, the Linux system development newsgroup, focuses on questions about modifying the kernel and developing device drivers and loadable modules.</p>
<p class="bull">&#8226; <em>comp.programming.threads</em> discusses programming with threads, especially POSIX threads.</p>
<p class="bull">&#8226; <em>comp.protocols.tcp-ip</em> discusses the TCP/IP networking protocol suite.</p>
<p class="noindentt">FAQs for many Usenet news groups can be found at <em><a href="http://www.faqs.org/">http://www.faqs.org/</a></em>.</p>
<div class="block">
<p class="noindent">Before posting a question to a newsgroup, check the FAQ for the group (often posted regularly within the group itself) and to try a web search to find a solution to the question. The <em><a href="http://groups.google.com/">http://groups.google.com/</a></em> web site provides a browser-based interface for searching old Usenet postings.</p>
</div>
<h3 class="h3a" id="app05lev1sec09"><strong>Linux kernel mailing list</strong></h3>
<p class="noindenta">The Linux kernel mailing list (LKML) is the principal broadcast communication medium for the Linux kernel developers. It provides an idea of what&#8217;s going on in kernel development, and is a forum for submitting kernel bug reports and patches. (LKML is not a forum for system programming questions.) To subscribe to LKML, send an email message to <em><a href="mailto:majordomo@vger.kernel.org">majordomo@vger.kernel.org</a></em> with the following message body as a single line:</p>
<p class="programs">subscribe linux-kernel</p>
<p class="noindent">For information about the workings of the list server, send a message body containing just the word &#8220;help&#8221; to the same address.</p>
<p class="indent">To send a message to LKML, use the address <em><a href="mailto:linux-kernel@vger.kernel.org">linux-kernel@vger.kernel.org</a></em>. The FAQ and pointers to some searchable archives for this mailing list are available at <em><a href="http://www.kernel.org/">http://www.kernel.org/</a></em>.</p>
<h3 class="h3a" id="app05lev1sec10"><strong>Web sites</strong></h3>
<p class="noindentab">The following web sites are of particular interest:</p>
<p class="bull">&#8226; <em><a href="http://www.kernel.org/">http://www.kernel.org/</a></em>, <em>The Linux Kernel Archives</em>, contains the source code for all versions of the Linux kernel, past and present.</p>
<p class="bull">&#8226; <em><a href="http://www.lwn.net/">http://www.lwn.net/</a></em>, <em>Linux Weekly News</em>, provides daily and weekly columns on various Linux-related topics. A weekly kernel-development column summarizes traffic through LKML.</p>
<p class="bull"><span epub:type="pagebreak" id="page_1424"/>&#8226; <em><a href="http://www.kernelnewbies.org/">http://www.kernelnewbies.org/</a></em>, <em>Linux Kernel Newbies</em>, is a starting point for programmers who want to learn about and modify the Linux kernel.</p>
<p class="bull">&#8226; <em><a href="http://lxr.linux.no/linux/">http://lxr.linux.no/linux/</a></em>, <em>Linux Cross-reference</em>, provides browser access to various versions of the Linux kernel source code. Each identifier in a source file is hyperlinked to make it easy to find the definition and uses of that identifier.</p>
<h3 class="h3a" id="app05lev1sec11"><strong>The kernel source code</strong></h3>
<p class="noindenta">If none of the preceding sources answer our questions, or if we want to confirm that documented information is true, then we can read the kernel source code. Although parts of the source code can be difficult to understand, reading the code of a particular system call in the Linux kernel source (or a library function in the GNU C library source) can often prove to be a surprisingly quick way to find the answer to a question.</p>
<p class="indent">If the Linux kernel source code has been installed on the system, it can usually be found in the directory <span class="literal">/usr/src/linux</span>. <a href="app05.xhtml#app05table1">Table E-1</a> provides summary information about some of the subdirectories under this directory.</p>
<p class="tablecap"><a id="app05table1"/><strong>Table E-1:</strong> Subdirectories in the Linux kernel source tree</p>
<table class="all">
<thead>
<tr>
<td style="vertical-align: top;" class="table_th"><p class="table"><strong>Directory</strong></p></td>
<td style="vertical-align: top;" class="table_th1"><p class="table"><strong>Contents</strong></p></td>
</tr>
</thead>
<tbody>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">Documentation</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Documentation of various aspects of the kernel</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">arch</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Architecture-specific code, organized into subdirectories&#8212;for example, <span class="literal">alpha</span>, <span class="literal">arm</span>, <span class="literal">ia64</span>, <span class="literal">sparc</span>, and <span class="literal">x86</span></p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">drivers</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Code for device drivers</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">fs</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">File system&#8211;specific code, organized into subdirectories&#8212;for example, <span class="literal">btrfs</span>, <span class="literal">ext4</span>, <span class="literal">proc</span> (the <span class="literal">/proc</span> file system), and <span class="literal">vfat</span></p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">include</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Header files needed by kernel code</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">init</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Initialization code for the kernel</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">ipc</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Code for System V IPC and POSIX message queues</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">kernel</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Code related to processes, program execution, kernel modules, signals, time, and timers</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">lib</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">General-purpose functions used by various parts of the kernel</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">mm</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Memory-management code</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_1"><p class="table"><span class="literal">net</span></p></td>
<td style="vertical-align: top;" class="table_2"><p class="table">Networking code (TCP/IP, UNIX and Internet domain sockets)</p></td>
</tr>
<tr>
<td style="vertical-align: top;" class="table_3"><p class="table"><span class="literal">scripts</span></p></td>
<td style="vertical-align: top;" class="table_3a"><p class="table">Scripts to configure and build the kernel</p></td>
</tr>
</tbody>
</table>
</body>
</html>
